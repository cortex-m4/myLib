<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [OLED_Demo\OLED_Demo.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image OLED_Demo\OLED_Demo.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Sat Jun 05 20:43:37 2021
<BR><P>
<H3>Maximum Stack Usage =        432 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
HMI_DemoMenu_ProcessEvent &rArr; SGUI_Menu_Repaint &rArr; SGUI_ItemsBase_Repaint &rArr; SGUI_Text_DrawText &rArr; SGUI_Basic_DrawRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[36]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[36]">ADC1_IRQHandler</a><BR>
 <LI><a href="#[28]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[28]">HardFault_Handler</a><BR>
 <LI><a href="#[27]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[27]">NMI_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[36]">ADC1_IRQHandler</a> from startup_stm32g070xx.o(.text) referenced from startup_stm32g070xx.o(RESET)
 <LI><a href="#[35]">DMA1_Ch4_7_DMAMUX1_OVR_IRQHandler</a> from startup_stm32g070xx.o(.text) referenced from startup_stm32g070xx.o(RESET)
 <LI><a href="#[33]">DMA1_Channel1_IRQHandler</a> from startup_stm32g070xx.o(.text) referenced from startup_stm32g070xx.o(RESET)
 <LI><a href="#[34]">DMA1_Channel2_3_IRQHandler</a> from startup_stm32g070xx.o(.text) referenced from startup_stm32g070xx.o(RESET)
 <LI><a href="#[30]">EXTI0_1_IRQHandler</a> from startup_stm32g070xx.o(.text) referenced from startup_stm32g070xx.o(RESET)
 <LI><a href="#[31]">EXTI2_3_IRQHandler</a> from startup_stm32g070xx.o(.text) referenced from startup_stm32g070xx.o(RESET)
 <LI><a href="#[32]">EXTI4_15_IRQHandler</a> from startup_stm32g070xx.o(.text) referenced from startup_stm32g070xx.o(RESET)
 <LI><a href="#[2e]">FLASH_IRQHandler</a> from startup_stm32g070xx.o(.text) referenced from startup_stm32g070xx.o(RESET)
 <LI><a href="#[60]">GB2312_GetFontData</a> from resource.o(i.GB2312_GetFontData) referenced from resource.o(.constdata)
 <LI><a href="#[62]">GB2312_IsFullWidth</a> from resource.o(i.GB2312_IsFullWidth) referenced from resource.o(.constdata)
 <LI><a href="#[5f]">GetCharIndex_GB2312</a> from resource.o(i.GetCharIndex_GB2312) referenced from resource.o(.constdata)
 <LI><a href="#[3]">HMI_DemoBasic_PostProcess</a> from basic.o(i.HMI_DemoBasic_PostProcess) referenced 2 times from basic.o(.data)
 <LI><a href="#[0]">HMI_DemoBasic_Prepare</a> from basic.o(i.HMI_DemoBasic_Prepare) referenced 2 times from basic.o(.data)
 <LI><a href="#[2]">HMI_DemoBasic_ProcessEvent</a> from basic.o(i.HMI_DemoBasic_ProcessEvent) referenced 2 times from basic.o(.data)
 <LI><a href="#[1]">HMI_DemoBasic_RefreshScreen</a> from basic.o(i.HMI_DemoBasic_RefreshScreen) referenced 2 times from basic.o(.data)
 <LI><a href="#[4]">HMI_DemoCurve_Initialize</a> from curve.o(i.HMI_DemoCurve_Initialize) referenced 2 times from curve.o(.data)
 <LI><a href="#[8]">HMI_DemoCurve_PostProcess</a> from curve.o(i.HMI_DemoCurve_PostProcess) referenced 2 times from curve.o(.data)
 <LI><a href="#[5]">HMI_DemoCurve_Prepare</a> from curve.o(i.HMI_DemoCurve_Prepare) referenced 2 times from curve.o(.data)
 <LI><a href="#[7]">HMI_DemoCurve_ProcessEvent</a> from curve.o(i.HMI_DemoCurve_ProcessEvent) referenced 2 times from curve.o(.data)
 <LI><a href="#[6]">HMI_DemoCurve_RefreshScreen</a> from curve.o(i.HMI_DemoCurve_RefreshScreen) referenced 2 times from curve.o(.data)
 <LI><a href="#[9]">HMI_DemoList_Initialize</a> from list.o(i.HMI_DemoList_Initialize) referenced 2 times from list.o(.data)
 <LI><a href="#[d]">HMI_DemoList_PostProcess</a> from list.o(i.HMI_DemoList_PostProcess) referenced 2 times from list.o(.data)
 <LI><a href="#[a]">HMI_DemoList_Prepare</a> from list.o(i.HMI_DemoList_Prepare) referenced 2 times from list.o(.data)
 <LI><a href="#[c]">HMI_DemoList_ProcessEvent</a> from list.o(i.HMI_DemoList_ProcessEvent) referenced 2 times from list.o(.data)
 <LI><a href="#[b]">HMI_DemoList_RefreshScreen</a> from list.o(i.HMI_DemoList_RefreshScreen) referenced 2 times from list.o(.data)
 <LI><a href="#[e]">HMI_DemoMenu_Initialize</a> from menu.o(i.HMI_DemoMenu_Initialize) referenced 2 times from menu.o(.data)
 <LI><a href="#[12]">HMI_DemoMenu_PostProcess</a> from menu.o(i.HMI_DemoMenu_PostProcess) referenced 2 times from menu.o(.data)
 <LI><a href="#[f]">HMI_DemoMenu_Prepare</a> from menu.o(i.HMI_DemoMenu_Prepare) referenced 2 times from menu.o(.data)
 <LI><a href="#[11]">HMI_DemoMenu_ProcessEvent</a> from menu.o(i.HMI_DemoMenu_ProcessEvent) referenced 2 times from menu.o(.data)
 <LI><a href="#[10]">HMI_DemoMenu_RefreshScreen</a> from menu.o(i.HMI_DemoMenu_RefreshScreen) referenced 2 times from menu.o(.data)
 <LI><a href="#[13]">HMI_DemoNotice_Initialize</a> from notice.o(i.HMI_DemoNotice_Initialize) referenced 2 times from notice.o(.data)
 <LI><a href="#[17]">HMI_DemoNotice_PostProcess</a> from notice.o(i.HMI_DemoNotice_PostProcess) referenced 2 times from notice.o(.data)
 <LI><a href="#[14]">HMI_DemoNotice_Prepare</a> from notice.o(i.HMI_DemoNotice_Prepare) referenced 2 times from notice.o(.data)
 <LI><a href="#[16]">HMI_DemoNotice_ProcessEvent</a> from notice.o(i.HMI_DemoNotice_ProcessEvent) referenced 2 times from notice.o(.data)
 <LI><a href="#[15]">HMI_DemoNotice_RefreshScreen</a> from notice.o(i.HMI_DemoNotice_RefreshScreen) referenced 2 times from notice.o(.data)
 <LI><a href="#[18]">HMI_DemoRealGraph_Initialize</a> from realtimegraph.o(i.HMI_DemoRealGraph_Initialize) referenced 2 times from realtimegraph.o(.data)
 <LI><a href="#[1c]">HMI_DemoRealGraph_PostProcess</a> from realtimegraph.o(i.HMI_DemoRealGraph_PostProcess) referenced 2 times from realtimegraph.o(.data)
 <LI><a href="#[19]">HMI_DemoRealGraph_Prepare</a> from realtimegraph.o(i.HMI_DemoRealGraph_Prepare) referenced 2 times from realtimegraph.o(.data)
 <LI><a href="#[1b]">HMI_DemoRealGraph_ProcessEvent</a> from realtimegraph.o(i.HMI_DemoRealGraph_ProcessEvent) referenced 2 times from realtimegraph.o(.data)
 <LI><a href="#[1a]">HMI_DemoRealGraph_RefreshScreen</a> from realtimegraph.o(i.HMI_DemoRealGraph_RefreshScreen) referenced 2 times from realtimegraph.o(.data)
 <LI><a href="#[20]">HMI_DemoText_PostProcess</a> from text.o(i.HMI_DemoText_PostProcess) referenced 2 times from text.o(.data)
 <LI><a href="#[1d]">HMI_DemoText_Prepare</a> from text.o(i.HMI_DemoText_Prepare) referenced 2 times from text.o(.data)
 <LI><a href="#[1f]">HMI_DemoText_ProcessEvent</a> from text.o(i.HMI_DemoText_ProcessEvent) referenced 2 times from text.o(.data)
 <LI><a href="#[1e]">HMI_DemoText_RefreshScreen</a> from text.o(i.HMI_DemoText_RefreshScreen) referenced 2 times from text.o(.data)
 <LI><a href="#[21]">HMI_DemoVariableBox_Initialize</a> from variablebox.o(i.HMI_DemoVariableBox_Initialize) referenced 2 times from variablebox.o(.data)
 <LI><a href="#[25]">HMI_DemoVariableBox_PostProcess</a> from variablebox.o(i.HMI_DemoVariableBox_PostProcess) referenced 2 times from variablebox.o(.data)
 <LI><a href="#[22]">HMI_DemoVariableBox_Prepare</a> from variablebox.o(i.HMI_DemoVariableBox_Prepare) referenced 2 times from variablebox.o(.data)
 <LI><a href="#[24]">HMI_DemoVariableBox_ProcessEvent</a> from variablebox.o(i.HMI_DemoVariableBox_ProcessEvent) referenced 2 times from variablebox.o(.data)
 <LI><a href="#[23]">HMI_DemoVariableBox_RefreshScreen</a> from variablebox.o(i.HMI_DemoVariableBox_RefreshScreen) referenced 2 times from variablebox.o(.data)
 <LI><a href="#[28]">HardFault_Handler</a> from stm32g0xx_it.o(i.HardFault_Handler) referenced from startup_stm32g070xx.o(RESET)
 <LI><a href="#[40]">I2C1_IRQHandler</a> from startup_stm32g070xx.o(.text) referenced from startup_stm32g070xx.o(RESET)
 <LI><a href="#[41]">I2C2_IRQHandler</a> from startup_stm32g070xx.o(.text) referenced from startup_stm32g070xx.o(RESET)
 <LI><a href="#[27]">NMI_Handler</a> from stm32g0xx_it.o(i.NMI_Handler) referenced from startup_stm32g070xx.o(RESET)
 <LI><a href="#[2a]">PendSV_Handler</a> from stm32g0xx_it.o(i.PendSV_Handler) referenced from startup_stm32g070xx.o(RESET)
 <LI><a href="#[2f]">RCC_IRQHandler</a> from startup_stm32g070xx.o(.text) referenced from startup_stm32g070xx.o(RESET)
 <LI><a href="#[2d]">RTC_TAMP_IRQHandler</a> from startup_stm32g070xx.o(.text) referenced from startup_stm32g070xx.o(RESET)
 <LI><a href="#[26]">Reset_Handler</a> from startup_stm32g070xx.o(.text) referenced from startup_stm32g070xx.o(RESET)
 <LI><a href="#[4c]">SCREEN_ClearDisplay</a> from screen.o(i.SCREEN_ClearDisplay) referenced from demoproc.o(i.InitializeHMIEngineObj)
 <LI><a href="#[4b]">SCREEN_GetPixel</a> from screen.o(i.SCREEN_GetPixel) referenced from demoproc.o(i.InitializeHMIEngineObj)
 <LI><a href="#[4d]">SCREEN_RefreshScreen</a> from screen.o(i.SCREEN_RefreshScreen) referenced from demoproc.o(i.InitializeHMIEngineObj)
 <LI><a href="#[4a]">SCREEN_SetPixel</a> from screen.o(i.SCREEN_SetPixel) referenced from demoproc.o(i.InitializeHMIEngineObj)
 <LI><a href="#[5c]">SGUI_Resource_GetCharIndex_Default</a> from sgui_fontresource.o(i.SGUI_Resource_GetCharIndex_Default) referenced 2 times from sgui_fontresource.o(.constdata)
 <LI><a href="#[58]">SGUI_Resource_GetCharIndex_MiniNum</a> from sgui_fontresource.o(i.SGUI_Resource_GetCharIndex_MiniNum) referenced from sgui_fontresource.o(.constdata)
 <LI><a href="#[5e]">SGUI_Resource_GetFontData_12</a> from sgui_fontresource.o(i.SGUI_Resource_GetFontData_12) referenced from sgui_fontresource.o(.constdata)
 <LI><a href="#[5d]">SGUI_Resource_GetFontData_8</a> from sgui_fontresource.o(i.SGUI_Resource_GetFontData_8) referenced from sgui_fontresource.o(.constdata)
 <LI><a href="#[59]">SGUI_Resource_GetFontData_MiniNum</a> from sgui_fontresource.o(i.SGUI_Resource_GetFontData_MiniNum) referenced from sgui_fontresource.o(.constdata)
 <LI><a href="#[5b]">SGUI_Resource_IsFullWidth_Default</a> from sgui_fontresource.o(i.SGUI_Resource_IsFullWidth_Default) referenced 3 times from sgui_fontresource.o(.constdata)
 <LI><a href="#[5a]">SGUI_Resource_StepNext_Default</a> from sgui_fontresource.o(i.SGUI_Resource_StepNext_Default) referenced 3 times from sgui_fontresource.o(.constdata)
 <LI><a href="#[42]">SPI1_IRQHandler</a> from startup_stm32g070xx.o(.text) referenced from startup_stm32g070xx.o(RESET)
 <LI><a href="#[43]">SPI2_IRQHandler</a> from startup_stm32g070xx.o(.text) referenced from startup_stm32g070xx.o(RESET)
 <LI><a href="#[29]">SVC_Handler</a> from stm32g0xx_it.o(i.SVC_Handler) referenced from startup_stm32g070xx.o(RESET)
 <LI><a href="#[61]">StepNext_GB2312</a> from resource.o(i.StepNext_GB2312) referenced from resource.o(.constdata)
 <LI><a href="#[2b]">SysTick_Handler</a> from stm32g0xx_it.o(i.SysTick_Handler) referenced from startup_stm32g070xx.o(RESET)
 <LI><a href="#[48]">SystemInit</a> from system_stm32g0xx.o(i.SystemInit) referenced from startup_stm32g070xx.o(.text)
 <LI><a href="#[3c]">TIM14_IRQHandler</a> from startup_stm32g070xx.o(.text) referenced from startup_stm32g070xx.o(RESET)
 <LI><a href="#[3d]">TIM15_IRQHandler</a> from startup_stm32g070xx.o(.text) referenced from startup_stm32g070xx.o(RESET)
 <LI><a href="#[3e]">TIM16_IRQHandler</a> from startup_stm32g070xx.o(.text) referenced from startup_stm32g070xx.o(RESET)
 <LI><a href="#[3f]">TIM17_IRQHandler</a> from startup_stm32g070xx.o(.text) referenced from startup_stm32g070xx.o(RESET)
 <LI><a href="#[37]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_stm32g070xx.o(.text) referenced from startup_stm32g070xx.o(RESET)
 <LI><a href="#[38]">TIM1_CC_IRQHandler</a> from startup_stm32g070xx.o(.text) referenced from startup_stm32g070xx.o(RESET)
 <LI><a href="#[39]">TIM3_IRQHandler</a> from startup_stm32g070xx.o(.text) referenced from startup_stm32g070xx.o(RESET)
 <LI><a href="#[3a]">TIM6_IRQHandler</a> from startup_stm32g070xx.o(.text) referenced from startup_stm32g070xx.o(RESET)
 <LI><a href="#[3b]">TIM7_IRQHandler</a> from startup_stm32g070xx.o(.text) referenced from startup_stm32g070xx.o(RESET)
 <LI><a href="#[44]">USART1_IRQHandler</a> from startup_stm32g070xx.o(.text) referenced from startup_stm32g070xx.o(RESET)
 <LI><a href="#[45]">USART2_IRQHandler</a> from startup_stm32g070xx.o(.text) referenced from startup_stm32g070xx.o(RESET)
 <LI><a href="#[46]">USART3_4_IRQHandler</a> from startup_stm32g070xx.o(.text) referenced from startup_stm32g070xx.o(RESET)
 <LI><a href="#[2c]">WWDG_IRQHandler</a> from startup_stm32g070xx.o(.text) referenced from startup_stm32g070xx.o(RESET)
 <LI><a href="#[49]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32g070xx.o(.text)
 <LI><a href="#[47]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[57]">u8g2_draw_l90_r0</a> from u8g2_setup.o(i.u8g2_draw_l90_r0) referenced from u8g2_setup.o(.constdata)
 <LI><a href="#[50]">u8g2_font_calc_vref_font</a> from u8g2_font.o(i.u8g2_font_calc_vref_font) referenced from u8g2_font.o(i.u8g2_SetFontPosBaseline)
 <LI><a href="#[53]">u8g2_ll_hvline_vertical_top_lsb</a> from u8g2_ll_hvline.o(i.u8g2_ll_hvline_vertical_top_lsb) referenced from u8g2_d_setup.o(i.u8g2_Setup_ssd1306_i2c_128x64_noname_f)
 <LI><a href="#[55]">u8g2_update_dimension_r0</a> from u8g2_setup.o(i.u8g2_update_dimension_r0) referenced from u8g2_setup.o(.constdata)
 <LI><a href="#[56]">u8g2_update_page_win_r0</a> from u8g2_setup.o(i.u8g2_update_page_win_r0) referenced from u8g2_setup.o(.constdata)
 <LI><a href="#[4f]">u8x8_byte_sw_i2c</a> from u8x8_byte.o(i.u8x8_byte_sw_i2c) referenced from oled.o(i.u8g2Init)
 <LI><a href="#[51]">u8x8_cad_ssd13xx_fast_i2c</a> from u8x8_cad.o(i.u8x8_cad_ssd13xx_fast_i2c) referenced from u8g2_d_setup.o(i.u8g2_Setup_ssd1306_i2c_128x64_noname_f)
 <LI><a href="#[52]">u8x8_d_ssd1306_128x64_noname</a> from u8x8_d_ssd1306_128x64_noname.o(i.u8x8_d_ssd1306_128x64_noname) referenced from u8g2_d_setup.o(i.u8g2_Setup_ssd1306_i2c_128x64_noname_f)
 <LI><a href="#[54]">u8x8_dummy_cb</a> from u8x8_setup.o(i.u8x8_dummy_cb) referenced from u8x8_setup.o(i.u8x8_SetupDefaults)
 <LI><a href="#[4e]">u8x8_gpio_and_delay</a> from oled.o(i.u8x8_gpio_and_delay) referenced from oled.o(i.u8g2Init)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[49]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g070xx.o(.text)
</UL>
<P><STRONG><a name="[10c]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[63]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[6a]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[10d]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[10e]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[10f]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[110]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[111]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[26]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32g070xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g070xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g070xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g070xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>DMA1_Ch4_7_DMAMUX1_OVR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g070xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g070xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g070xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g070xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g070xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g070xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g070xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g070xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g070xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g070xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g070xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g070xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g070xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g070xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g070xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g070xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g070xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g070xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g070xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g070xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>RTC_TAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g070xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g070xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g070xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g070xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g070xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g070xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g070xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g070xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g070xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g070xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g070xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g070xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g070xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g070xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g070xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g070xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g070xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g070xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g070xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g070xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g070xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g070xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g070xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g070xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g070xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g070xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g070xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g070xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>USART3_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g070xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g070xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g070xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g070xx.o(RESET)
</UL>
<P><STRONG><a name="[112]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[66]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ControlVoltageScaling
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ScrollBar_Repaint
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Common_IntegerToString
</UL>

<P><STRONG><a name="[113]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[65]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DemoMainProcess
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_RealtimeGraph_Initialize
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_RealtimeGraph_GetValuePointYCoordinate
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ItemsBase_Resize
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ItemsBase_Repaint
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ItemsBase_Initialize
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ItemsBase_GetItemExtent
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Curve_CalculatePointPosition
</UL>

<P><STRONG><a name="[6d]"></a>rand</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DemoMainProcess
</UL>

<P><STRONG><a name="[114]"></a>srand</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rand.o(.text), UNUSED)

<P><STRONG><a name="[115]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[c6]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_TextVariableBox_Initialize
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_NumberVariableBox_Initialize
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ScrollBar_Initialize
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Curve_Initialize
</UL>

<P><STRONG><a name="[116]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[68]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[117]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[118]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[67]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8g2_ClearBuffer
</UL>

<P><STRONG><a name="[8f]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeHMIEngineObj
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoNotice_Initialize
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoMenu_Initialize
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoList_Initialize
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoCurve_ProcessEvent
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_TextVariableBox_Initialize
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_NumberVariableBox_Initialize
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ScrollBar_Initialize
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Curve_InitializePoint
</UL>

<P><STRONG><a name="[119]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[69]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[a2]"></a>strncpy</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoNotice_Prepare
</UL>

<P><STRONG><a name="[d5]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_TextVariableBox_Repaint
</UL>

<P><STRONG><a name="[64]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[11a]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[11b]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[11c]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[6b]"></a>DemoMainProcess</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, demoproc.o(i.DemoMainProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = DemoMainProcess &rArr; InitializeHMIEngineObj &rArr; HMI_ActiveEngine &rArr; HMI_GetScreenObjectInEngine
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeHMIEngineObj
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserEventTriggered
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_ProcessEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[da]"></a>GetKeyInput</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, trigger_flags.o(i.GetKeyInput))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserEventTriggered
</UL>

<P><STRONG><a name="[70]"></a>HAL_Delay</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32g0xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_gpio_and_delay
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b5]"></a>HAL_GPIO_Init</STRONG> (Thumb, 330 bytes, Stack size 28 bytes, stm32g0xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_sda_mod
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[b2]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32g0xx_hal_gpio.o(i.HAL_GPIO_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeysCan
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_transmit_dat
</UL>

<P><STRONG><a name="[e5]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32g0xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_gpio_and_delay
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_transmit_dat
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_stop
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_send_data
</UL>

<P><STRONG><a name="[71]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32g0xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>

<P><STRONG><a name="[d7]"></a>HAL_IncTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32g0xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[72]"></a>HAL_Init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32g0xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[73]"></a>HAL_InitTick</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, stm32g0xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_InitTick &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[74]"></a>HAL_MspInit</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, stm32g0xx_hal_msp.o(i.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_MspInit
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSCFG_StrobeDBattpinsConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[76]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32g0xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[79]"></a>HAL_PWREx_ControlVoltageScaling</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, stm32g0xx_hal_pwr_ex.o(i.HAL_PWREx_ControlVoltageScaling))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_PWREx_ControlVoltageScaling &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[7a]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 318 bytes, Stack size 24 bytes, stm32g0xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[7b]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, stm32g0xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[7c]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 954 bytes, Stack size 24 bytes, stm32g0xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[77]"></a>HAL_SYSCFG_StrobeDBattpinsConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32g0xx_hal.o(i.HAL_SYSCFG_StrobeDBattpinsConfig))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>

<P><STRONG><a name="[75]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32g0xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[7d]"></a>HMI_ActiveEngine</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, hmi_engine.o(i.HMI_ActiveEngine))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HMI_ActiveEngine &rArr; HMI_GetScreenObjectInEngine
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_GetScreenObjectInEngine
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeHMIEngineObj
</UL>

<P><STRONG><a name="[7f]"></a>HMI_GoBack</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, hmi_engine.o(i.HMI_GoBack))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HMI_GoBack
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoVariableBox_PostProcess
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoText_PostProcess
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoRealGraph_PostProcess
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoNotice_PostProcess
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoMenu_PostProcess
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoList_PostProcess
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoCurve_PostProcess
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoBasic_PostProcess
</UL>

<P><STRONG><a name="[6e]"></a>HMI_ProcessEvent</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, hmi_engine.o(i.HMI_ProcessEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HMI_ProcessEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DemoMainProcess
</UL>

<P><STRONG><a name="[b0]"></a>HMI_StartEngine</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, hmi_engine.o(i.HMI_StartEngine))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HMI_StartEngine
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeHMIEngineObj
</UL>

<P><STRONG><a name="[97]"></a>HMI_SwitchScreen</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, hmi_engine.o(i.HMI_SwitchScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HMI_SwitchScreen &rArr; HMI_GetScreenObjectInEngine
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_GetScreenObjectInEngine
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoList_PostProcess
</UL>

<P><STRONG><a name="[28]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32g0xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g070xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>InitializeHMIEngineObj</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, demoproc.o(i.InitializeHMIEngineObj))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = InitializeHMIEngineObj &rArr; HMI_ActiveEngine &rArr; HMI_GetScreenObjectInEngine
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_StartEngine
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_ActiveEngine
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_ResetActiveArea
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DemoMainProcess
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b3]"></a>KeyEventProc</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, trigger_flags.o(i.KeyEventProc))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeysCan
</UL>

<P><STRONG><a name="[d9]"></a>KeyIsTrigger</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, trigger_flags.o(i.KeyIsTrigger))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserEventTriggered
</UL>

<P><STRONG><a name="[db]"></a>KeyTriggerReset</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, trigger_flags.o(i.KeyTriggerReset))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserEventTriggered
</UL>

<P><STRONG><a name="[b1]"></a>KeysCan</STRONG> (Thumb, 298 bytes, Stack size 24 bytes, lib_key.o(i.KeysCan))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = KeysCan
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventProc
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserEventTriggered
</UL>

<P><STRONG><a name="[b4]"></a>MX_GPIO_Init</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, gpio.o(i.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = MX_GPIO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[27]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32g0xx_it.o(i.NMI_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g070xx.o(RESET)
</UL>
<P><STRONG><a name="[b6]"></a>OLED_CLS</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, oled.o(i.OLED_CLS))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = OLED_CLS &rArr; OLED_Fill &rArr; WriteDat &rArr; i2c_write_byte &rArr; i2c_transmit_dat &rArr; i2c_send_data &rArr; i2c_sda_mod &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Fill
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCREEN_ClearDisplay
</UL>

<P><STRONG><a name="[b7]"></a>OLED_Fill</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, oled.o(i.OLED_Fill))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = OLED_Fill &rArr; WriteDat &rArr; i2c_write_byte &rArr; i2c_transmit_dat &rArr; i2c_send_data &rArr; i2c_sda_mod &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDat
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_CLS
</UL>

<P><STRONG><a name="[ba]"></a>OLED_Init</STRONG> (Thumb, 196 bytes, Stack size 8 bytes, oled.o(i.OLED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = OLED_Init &rArr; OLED_Fill &rArr; WriteDat &rArr; i2c_write_byte &rArr; i2c_transmit_dat &rArr; i2c_send_data &rArr; i2c_sda_mod &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCmd
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Fill
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_gpio_and_delay
</UL>

<P><STRONG><a name="[2a]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32g0xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g070xx.o(RESET)
</UL>
<P><STRONG><a name="[ac]"></a>RTCTimerEnable</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, demoproc.o(i.RTCTimerEnable))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoVariableBox_ProcessEvent
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoVariableBox_Prepare
</UL>

<P><STRONG><a name="[4c]"></a>SCREEN_ClearDisplay</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, screen.o(i.SCREEN_ClearDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = SCREEN_ClearDisplay &rArr; OLED_CLS &rArr; OLED_Fill &rArr; WriteDat &rArr; i2c_write_byte &rArr; i2c_transmit_dat &rArr; i2c_send_data &rArr; i2c_sda_mod &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8g2_ClearBuffer
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_CLS
</UL>
<BR>[Address Reference Count : 1]<UL><LI> demoproc.o(i.InitializeHMIEngineObj)
</UL>
<P><STRONG><a name="[4b]"></a>SCREEN_GetPixel</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, screen.o(i.SCREEN_GetPixel))
<BR>[Address Reference Count : 1]<UL><LI> demoproc.o(i.InitializeHMIEngineObj)
</UL>
<P><STRONG><a name="[4d]"></a>SCREEN_RefreshScreen</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, screen.o(i.SCREEN_RefreshScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = SCREEN_RefreshScreen &rArr; WriteDat &rArr; i2c_write_byte &rArr; i2c_transmit_dat &rArr; i2c_send_data &rArr; i2c_sda_mod &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDat
</UL>
<BR>[Address Reference Count : 1]<UL><LI> demoproc.o(i.InitializeHMIEngineObj)
</UL>
<P><STRONG><a name="[4a]"></a>SCREEN_SetPixel</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, screen.o(i.SCREEN_SetPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SCREEN_SetPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> demoproc.o(i.InitializeHMIEngineObj)
</UL>
<P><STRONG><a name="[bd]"></a>SGUI_Basic_DrawBitMap</STRONG> (Thumb, 326 bytes, Stack size 72 bytes, sgui_basic.o(i.SGUI_Basic_DrawBitMap))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = SGUI_Basic_DrawBitMap &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Common_AdaptDisplayInfo
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Text_DrawMultipleLinesText
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Notice_Repaint
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Menu_Repaint
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Text_DrawText
</UL>

<P><STRONG><a name="[82]"></a>SGUI_Basic_DrawCircle</STRONG> (Thumb, 338 bytes, Stack size 96 bytes, sgui_basic.o(i.SGUI_Basic_DrawCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = SGUI_Basic_DrawCircle &rArr; SGUI_Basic_DrawLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawPoint
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoBasic_RefreshScreen
</UL>

<P><STRONG><a name="[81]"></a>SGUI_Basic_DrawHorizontalLine</STRONG> (Thumb, 36 bytes, Stack size 40 bytes, sgui_basic.o(i.SGUI_Basic_DrawHorizontalLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SGUI_Basic_DrawHorizontalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoBasic_RefreshScreen
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_FillRectangleArea
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawRoundedRectangle
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawRectangle
</UL>

<P><STRONG><a name="[90]"></a>SGUI_Basic_DrawLine</STRONG> (Thumb, 154 bytes, Stack size 64 bytes, sgui_basic.o(i.SGUI_Basic_DrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SGUI_Basic_DrawLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoVariableBox_DrawFrame
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoCurve_RefreshScreen
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_RealtimeGraph_Repaint
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_List_Repaint
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Curve_Repaint
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawRoundedRectangle
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawCircle
</UL>

<P><STRONG><a name="[bf]"></a>SGUI_Basic_DrawPoint</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, sgui_basic.o(i.SGUI_Basic_DrawPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_PointIsInArea
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_ReverseBlockColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawVerticalLine
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawRoundedRectangle
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawRectangle
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawLine
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawHorizontalLine
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawCircle
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawBitMap
</UL>

<P><STRONG><a name="[80]"></a>SGUI_Basic_DrawRectangle</STRONG> (Thumb, 182 bytes, Stack size 48 bytes, sgui_basic.o(i.SGUI_Basic_DrawRectangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = SGUI_Basic_DrawRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_FillRectangleArea
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawVerticalLine
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawPoint
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawHorizontalLine
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoVariableBox_RefreshScreen
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoVariableBox_ProcessEvent
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoVariableBox_DrawFrame
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoText_Prepare
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoRealGraph_RefreshScreen
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoRealGraph_Prepare
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoMenu_ProcessEvent
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoMenu_Prepare
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoList_ProcessEvent
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoCurve_RefreshScreen
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoBasic_RefreshScreen
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoBasic_Prepare
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_TextVariableBox_Repaint
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_NumberVariableBox_Repaint
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_RealtimeGraph_Repaint
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Text_DrawMultipleLinesText
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Notice_Repaint
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Menu_Repaint
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ScrollBar_Repaint
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_List_Repaint
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Text_DrawText
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ItemsBase_Repaint
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Curve_Repaint
</UL>

<P><STRONG><a name="[83]"></a>SGUI_Basic_DrawRoundedRectangle</STRONG> (Thumb, 548 bytes, Stack size 120 bytes, sgui_basic.o(i.SGUI_Basic_DrawRoundedRectangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = SGUI_Basic_DrawRoundedRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_FillRectangleArea
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawPoint
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawLine
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawHorizontalLine
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoBasic_RefreshScreen
</UL>

<P><STRONG><a name="[c1]"></a>SGUI_Basic_DrawVerticalLine</STRONG> (Thumb, 36 bytes, Stack size 40 bytes, sgui_basic.o(i.SGUI_Basic_DrawVerticalLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_FillRectangleArea
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawRectangle
</UL>

<P><STRONG><a name="[c2]"></a>SGUI_Basic_FillRectangleArea</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, sgui_basic.o(i.SGUI_Basic_FillRectangleArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawVerticalLine
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawHorizontalLine
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawRoundedRectangle
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawRectangle
</UL>

<P><STRONG><a name="[c4]"></a>SGUI_Basic_GetPoint</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, sgui_basic.o(i.SGUI_Basic_GetPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SGUI_Basic_GetPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Curve_PointIsHighlight
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_ReverseBlockColor
</UL>

<P><STRONG><a name="[c0]"></a>SGUI_Basic_PointIsInArea</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, sgui_basic.o(i.SGUI_Basic_PointIsInArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SGUI_Basic_PointIsInArea
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Curve_Repaint
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawPoint
</UL>

<P><STRONG><a name="[af]"></a>SGUI_Basic_ResetActiveArea</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, sgui_basic.o(i.SGUI_Basic_ResetActiveArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SGUI_Basic_ResetActiveArea
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeHMIEngineObj
</UL>

<P><STRONG><a name="[c3]"></a>SGUI_Basic_ReverseBlockColor</STRONG> (Thumb, 70 bytes, Stack size 40 bytes, sgui_basic.o(i.SGUI_Basic_ReverseBlockColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SGUI_Basic_ReverseBlockColor &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_GetPoint
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_TextVariableBox_Repaint
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Curve_HighlightFocus
</UL>

<P><STRONG><a name="[be]"></a>SGUI_Common_AdaptDisplayInfo</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, sgui_common.o(i.SGUI_Common_AdaptDisplayInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SGUI_Common_AdaptDisplayInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Text_DrawMultipleLinesText
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Text_DrawText
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawBitMap
</UL>

<P><STRONG><a name="[94]"></a>SGUI_Common_IntegerToString</STRONG> (Thumb, 220 bytes, Stack size 56 bytes, sgui_common.o(i.SGUI_Common_IntegerToString))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SGUI_Common_IntegerToString &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoRealGraph_RefreshScreen
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoCurve_RepaintText
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_NumberVariableBox_Repaint
</UL>

<P><STRONG><a name="[87]"></a>SGUI_Curve_AddPoint</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, sgui_curve.o(i.SGUI_Curve_AddPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SGUI_Curve_AddPoint &rArr; SGUI_Curve_CalculatePointPosition &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Curve_CalculatePointPosition
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoCurve_Initialize
</UL>

<P><STRONG><a name="[c5]"></a>SGUI_Curve_CalculatePointPosition</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, sgui_curve.o(i.SGUI_Curve_CalculatePointPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SGUI_Curve_CalculatePointPosition &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Curve_UpdateFocusPoint
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Curve_InsertBeforePoint
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Curve_InsertAfterPoint
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Curve_AddPoint
</UL>

<P><STRONG><a name="[88]"></a>SGUI_Curve_FocusPoint</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, sgui_curve.o(i.SGUI_Curve_FocusPoint))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoCurve_Prepare
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoCurve_Initialize
</UL>

<P><STRONG><a name="[8c]"></a>SGUI_Curve_HighlightFocus</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, sgui_curve.o(i.SGUI_Curve_HighlightFocus))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SGUI_Curve_HighlightFocus &rArr; SGUI_Basic_ReverseBlockColor &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_ReverseBlockColor
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoCurve_RefreshScreen
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoCurve_ProcessEvent
</UL>

<P><STRONG><a name="[84]"></a>SGUI_Curve_Initialize</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, sgui_curve.o(i.SGUI_Curve_Initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SGUI_Curve_Initialize
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoCurve_Initialize
</UL>

<P><STRONG><a name="[86]"></a>SGUI_Curve_InitializePoint</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, sgui_curve.o(i.SGUI_Curve_InitializePoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SGUI_Curve_InitializePoint
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoCurve_ProcessEvent
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoCurve_Initialize
</UL>

<P><STRONG><a name="[8a]"></a>SGUI_Curve_InsertAfterPoint</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, sgui_curve.o(i.SGUI_Curve_InsertAfterPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SGUI_Curve_InsertAfterPoint &rArr; SGUI_Curve_CalculatePointPosition &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Curve_CalculatePointPosition
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoCurve_ProcessEvent
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoCurve_Initialize
</UL>

<P><STRONG><a name="[89]"></a>SGUI_Curve_InsertBeforePoint</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, sgui_curve.o(i.SGUI_Curve_InsertBeforePoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SGUI_Curve_InsertBeforePoint &rArr; SGUI_Curve_CalculatePointPosition &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Curve_CalculatePointPosition
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoCurve_ProcessEvent
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoCurve_Initialize
</UL>

<P><STRONG><a name="[8b]"></a>SGUI_Curve_PointIsHighlight</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, sgui_curve.o(i.SGUI_Curve_PointIsHighlight))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SGUI_Curve_PointIsHighlight &rArr; SGUI_Basic_GetPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_GetPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoCurve_ProcessEvent
</UL>

<P><STRONG><a name="[8e]"></a>SGUI_Curve_RemovePoint</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, sgui_curve.o(i.SGUI_Curve_RemovePoint))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoCurve_ProcessEvent
</UL>

<P><STRONG><a name="[92]"></a>SGUI_Curve_Repaint</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, sgui_curve.o(i.SGUI_Curve_Repaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = SGUI_Curve_Repaint &rArr; SGUI_Basic_DrawRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_PointIsInArea
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawRectangle
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoCurve_RefreshScreen
</UL>

<P><STRONG><a name="[8d]"></a>SGUI_Curve_UpdateFocusPoint</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, sgui_curve.o(i.SGUI_Curve_UpdateFocusPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = SGUI_Curve_UpdateFocusPoint &rArr; SGUI_Curve_CalculatePointPosition &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Curve_CalculatePointPosition
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoCurve_ProcessEvent
</UL>

<P><STRONG><a name="[d2]"></a>SGUI_ItemsBase_CanScrollDown</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sgui_itemsbase.o(i.SGUI_ItemsBase_CanScrollDown))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Menu_Repaint
</UL>

<P><STRONG><a name="[d1]"></a>SGUI_ItemsBase_CanScrollUp</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, sgui_itemsbase.o(i.SGUI_ItemsBase_CanScrollUp))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Menu_Repaint
</UL>

<P><STRONG><a name="[9f]"></a>SGUI_ItemsBase_GetItemExtent</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, sgui_itemsbase.o(i.SGUI_ItemsBase_GetItemExtent))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SGUI_ItemsBase_GetItemExtent &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoMenu_ProcessEvent
</UL>

<P><STRONG><a name="[c7]"></a>SGUI_ItemsBase_Initialize</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, sgui_itemsbase.o(i.SGUI_ItemsBase_Initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SGUI_ItemsBase_Initialize &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ItemsBase_JumpItem
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Menu_Initialize
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_List_Initialize
</UL>

<P><STRONG><a name="[c9]"></a>SGUI_ItemsBase_InsertItem</STRONG> (Thumb, 184 bytes, Stack size 12 bytes, sgui_itemsbase.o(i.SGUI_ItemsBase_InsertItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SGUI_ItemsBase_InsertItem
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ItemsBase_JumpItem
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_List_InsertItem
</UL>

<P><STRONG><a name="[c8]"></a>SGUI_ItemsBase_JumpItem</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, sgui_itemsbase.o(i.SGUI_ItemsBase_JumpItem))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ItemsBase_Selecte
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ItemsBase_Resize
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ItemsBase_Repaint
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ItemsBase_RemoveItem
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ItemsBase_InsertItem
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ItemsBase_Initialize
</UL>

<P><STRONG><a name="[ca]"></a>SGUI_ItemsBase_RemoveItem</STRONG> (Thumb, 154 bytes, Stack size 12 bytes, sgui_itemsbase.o(i.SGUI_ItemsBase_RemoveItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SGUI_ItemsBase_RemoveItem
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ItemsBase_JumpItem
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_List_RemoveItem
</UL>

<P><STRONG><a name="[cb]"></a>SGUI_ItemsBase_Repaint</STRONG> (Thumb, 462 bytes, Stack size 64 bytes, sgui_itemsbase.o(i.SGUI_ItemsBase_Repaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = SGUI_ItemsBase_Repaint &rArr; SGUI_Text_DrawText &rArr; SGUI_Basic_DrawRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Text_DrawText
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ItemsBase_JumpItem
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawRectangle
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Menu_Repaint
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_List_Repaint
</UL>

<P><STRONG><a name="[cc]"></a>SGUI_ItemsBase_Resize</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, sgui_itemsbase.o(i.SGUI_ItemsBase_Resize))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SGUI_ItemsBase_Resize &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ItemsBase_JumpItem
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Menu_Resize
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_List_Resize
</UL>

<P><STRONG><a name="[99]"></a>SGUI_ItemsBase_Selecte</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, sgui_itemsbase.o(i.SGUI_ItemsBase_Selecte))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SGUI_ItemsBase_Selecte
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ItemsBase_JumpItem
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoMenu_ProcessEvent
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoList_ProcessEvent
</UL>

<P><STRONG><a name="[95]"></a>SGUI_List_Initialize</STRONG> (Thumb, 150 bytes, Stack size 64 bytes, sgui_list.o(i.SGUI_List_Initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = SGUI_List_Initialize &rArr; SGUI_ItemsBase_Initialize &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ScrollBar_Initialize
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ItemsBase_Initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoList_Initialize
</UL>

<P><STRONG><a name="[9c]"></a>SGUI_List_InsertItem</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, sgui_list.o(i.SGUI_List_InsertItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SGUI_List_InsertItem &rArr; SGUI_ItemsBase_InsertItem
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ScrollBar_SetValue
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ItemsBase_InsertItem
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoList_ProcessEvent
</UL>

<P><STRONG><a name="[9b]"></a>SGUI_List_RemoveItem</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, sgui_list.o(i.SGUI_List_RemoveItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SGUI_List_RemoveItem &rArr; SGUI_ItemsBase_RemoveItem
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ScrollBar_SetValue
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ItemsBase_RemoveItem
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoList_ProcessEvent
</UL>

<P><STRONG><a name="[98]"></a>SGUI_List_Repaint</STRONG> (Thumb, 148 bytes, Stack size 56 bytes, sgui_list.o(i.SGUI_List_Repaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = SGUI_List_Repaint &rArr; SGUI_ItemsBase_Repaint &rArr; SGUI_Text_DrawText &rArr; SGUI_Basic_DrawRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ScrollBar_SetValue
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ScrollBar_Repaint
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Text_DrawText
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ItemsBase_Repaint
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawRectangle
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoList_RefreshScreen
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoList_ProcessEvent
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoList_Prepare
</UL>

<P><STRONG><a name="[9a]"></a>SGUI_List_Resize</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, sgui_list.o(i.SGUI_List_Resize))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SGUI_List_Resize &rArr; SGUI_ItemsBase_Resize &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ItemsBase_Resize
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoList_ProcessEvent
</UL>

<P><STRONG><a name="[9d]"></a>SGUI_Menu_Initialize</STRONG> (Thumb, 68 bytes, Stack size 40 bytes, sgui_menu.o(i.SGUI_Menu_Initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = SGUI_Menu_Initialize &rArr; SGUI_ItemsBase_Initialize &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ItemsBase_Initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoMenu_ProcessEvent
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoMenu_Initialize
</UL>

<P><STRONG><a name="[a0]"></a>SGUI_Menu_PopupSubMenu</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, sgui_menu.o(i.SGUI_Menu_PopupSubMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = SGUI_Menu_PopupSubMenu &rArr; SGUI_Menu_Resize &rArr; SGUI_ItemsBase_Resize &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Menu_Resize
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoMenu_ProcessEvent
</UL>

<P><STRONG><a name="[9e]"></a>SGUI_Menu_Repaint</STRONG> (Thumb, 140 bytes, Stack size 56 bytes, sgui_menu.o(i.SGUI_Menu_Repaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = SGUI_Menu_Repaint &rArr; SGUI_ItemsBase_Repaint &rArr; SGUI_Text_DrawText &rArr; SGUI_Basic_DrawRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ItemsBase_Repaint
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ItemsBase_CanScrollUp
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ItemsBase_CanScrollDown
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawRectangle
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawBitMap
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoMenu_RefreshScreen
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoMenu_ProcessEvent
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoMenu_Prepare
</UL>

<P><STRONG><a name="[d0]"></a>SGUI_Menu_Resize</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, sgui_menu.o(i.SGUI_Menu_Resize))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SGUI_Menu_Resize &rArr; SGUI_ItemsBase_Resize &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ItemsBase_Resize
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Menu_PopupSubMenu
</UL>

<P><STRONG><a name="[a1]"></a>SGUI_Notice_FitArea</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, sgui_notice.o(i.SGUI_Notice_FitArea))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoVariableBox_Prepare
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoNotice_Initialize
</UL>

<P><STRONG><a name="[a3]"></a>SGUI_Notice_Repaint</STRONG> (Thumb, 156 bytes, Stack size 88 bytes, sgui_notice.o(i.SGUI_Notice_Repaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = SGUI_Notice_Repaint &rArr; SGUI_Text_DrawMultipleLinesText &rArr; SGUI_Basic_DrawRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Text_DrawMultipleLinesText
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawRectangle
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawBitMap
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoVariableBox_Prepare
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoNotice_RefreshScreen
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoNotice_Prepare
</UL>

<P><STRONG><a name="[aa]"></a>SGUI_NumberVariableBox_Initialize</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, sgui_variablebox.o(i.SGUI_NumberVariableBox_Initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SGUI_NumberVariableBox_Initialize
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoVariableBox_Initialize
</UL>

<P><STRONG><a name="[ad]"></a>SGUI_NumberVariableBox_Repaint</STRONG> (Thumb, 138 bytes, Stack size 64 bytes, sgui_variablebox.o(i.SGUI_NumberVariableBox_Repaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = SGUI_NumberVariableBox_Repaint &rArr; SGUI_Text_DrawText &rArr; SGUI_Basic_DrawRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Text_GetTextExtent
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Text_DrawText
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Common_IntegerToString
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawRectangle
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoVariableBox_RefreshScreen
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoVariableBox_ProcessEvent
</UL>

<P><STRONG><a name="[a7]"></a>SGUI_RealtimeGraph_AppendValue</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, sgui_realtimegraph.o(i.SGUI_RealtimeGraph_AppendValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SGUI_RealtimeGraph_AppendValue &rArr; SGUI_RealtimeGraph_GetValuePointYCoordinate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_RealtimeGraph_GetValuePointYCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoRealGraph_ProcessEvent
</UL>

<P><STRONG><a name="[a5]"></a>SGUI_RealtimeGraph_Initialize</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, sgui_realtimegraph.o(i.SGUI_RealtimeGraph_Initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SGUI_RealtimeGraph_Initialize &rArr; SGUI_RealtimeGraph_GetValuePointYCoordinate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_RealtimeGraph_GetValuePointYCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoRealGraph_Prepare
</UL>

<P><STRONG><a name="[a6]"></a>SGUI_RealtimeGraph_Repaint</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, sgui_realtimegraph.o(i.SGUI_RealtimeGraph_Repaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = SGUI_RealtimeGraph_Repaint &rArr; SGUI_Basic_DrawRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_RealtimeGraph_GetValuePointYCoordinate
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawRectangle
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoRealGraph_RefreshScreen
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoRealGraph_Prepare
</UL>

<P><STRONG><a name="[cd]"></a>SGUI_ScrollBar_Initialize</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, sgui_scrollbar.o(i.SGUI_ScrollBar_Initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SGUI_ScrollBar_Initialize
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_List_Initialize
</UL>

<P><STRONG><a name="[cf]"></a>SGUI_ScrollBar_Repaint</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, sgui_scrollbar.o(i.SGUI_ScrollBar_Repaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = SGUI_ScrollBar_Repaint &rArr; SGUI_Basic_DrawRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawRectangle
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_List_Repaint
</UL>

<P><STRONG><a name="[ce]"></a>SGUI_ScrollBar_SetValue</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, sgui_scrollbar.o(i.SGUI_ScrollBar_SetValue))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_List_Repaint
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_List_RemoveItem
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_List_InsertItem
</UL>

<P><STRONG><a name="[ab]"></a>SGUI_TextVariableBox_Initialize</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, sgui_variablebox.o(i.SGUI_TextVariableBox_Initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SGUI_TextVariableBox_Initialize
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoVariableBox_Initialize
</UL>

<P><STRONG><a name="[ae]"></a>SGUI_TextVariableBox_Repaint</STRONG> (Thumb, 160 bytes, Stack size 56 bytes, sgui_variablebox.o(i.SGUI_TextVariableBox_Repaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = SGUI_TextVariableBox_Repaint &rArr; SGUI_Text_DrawText &rArr; SGUI_Basic_DrawRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Text_DrawText
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_ReverseBlockColor
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawRectangle
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoVariableBox_RefreshScreen
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoVariableBox_ProcessEvent
</UL>

<P><STRONG><a name="[a8]"></a>SGUI_Text_DrawMultipleLinesText</STRONG> (Thumb, 256 bytes, Stack size 96 bytes, sgui_text.o(i.SGUI_Text_DrawMultipleLinesText))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = SGUI_Text_DrawMultipleLinesText &rArr; SGUI_Basic_DrawRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Text_GetCharacterData
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Common_AdaptDisplayInfo
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawRectangle
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawBitMap
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoText_RefreshScreen
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Notice_Repaint
</UL>

<P><STRONG><a name="[93]"></a>SGUI_Text_DrawText</STRONG> (Thumb, 188 bytes, Stack size 88 bytes, sgui_text.o(i.SGUI_Text_DrawText))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = SGUI_Text_DrawText &rArr; SGUI_Basic_DrawRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Text_GetCharacterData
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Common_AdaptDisplayInfo
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawRectangle
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawBitMap
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoVariableBox_DrawFrame
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoText_RefreshScreen
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoRealGraph_RefreshScreen
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoCurve_RepaintText
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_TextVariableBox_Repaint
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_NumberVariableBox_Repaint
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_List_Repaint
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ItemsBase_Repaint
</UL>

<P><STRONG><a name="[d6]"></a>SGUI_Text_GetCharacterData</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, sgui_text.o(i.SGUI_Text_GetCharacterData))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SGUI_Text_GetCharacterData
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Text_DrawMultipleLinesText
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Text_DrawText
</UL>

<P><STRONG><a name="[d3]"></a>SGUI_Text_GetTextExtent</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, sgui_text.o(i.SGUI_Text_GetTextExtent))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SGUI_Text_GetTextExtent
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_NumberVariableBox_Repaint
</UL>

<P><STRONG><a name="[29]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32g0xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g070xx.o(RESET)
</UL>
<P><STRONG><a name="[a4]"></a>SysTickTimerEnable</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, demoproc.o(i.SysTickTimerEnable))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoRealGraph_Prepare
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoRealGraph_PostProcess
</UL>

<P><STRONG><a name="[2b]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32g0xx_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g070xx.o(RESET)
</UL>
<P><STRONG><a name="[d8]"></a>SystemClock_Config</STRONG> (Thumb, 104 bytes, Stack size 80 bytes, main.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ControlVoltageScaling
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[48]"></a>SystemInit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, system_stm32g0xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g070xx.o(.text)
</UL>
<P><STRONG><a name="[6f]"></a>UserEventTriggered</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, demoproc.o(i.UserEventTriggered))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UserEventTriggered &rArr; KeysCan
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeysCan
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyTriggerReset
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsTrigger
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyInput
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DemoMainProcess
</UL>

<P><STRONG><a name="[b8]"></a>WriteCmd</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, oled.o(i.WriteCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = WriteCmd &rArr; i2c_write_byte &rArr; i2c_transmit_dat &rArr; i2c_send_data &rArr; i2c_sda_mod &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_write_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Fill
</UL>

<P><STRONG><a name="[b9]"></a>WriteDat</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, oled.o(i.WriteDat))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = WriteDat &rArr; i2c_write_byte &rArr; i2c_transmit_dat &rArr; i2c_send_data &rArr; i2c_sda_mod &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_write_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Fill
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCREEN_RefreshScreen
</UL>

<P><STRONG><a name="[96]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32g0xx_hal_dma.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_cad_ssd13xx_fast_i2c
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoList_PostProcess
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Resource_GetCharIndex_MiniNum
</UL>

<P><STRONG><a name="[11d]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[11e]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[11f]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[bb]"></a>i2c_init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, software_i2c.o(i.i2c_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = i2c_init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
</UL>

<P><STRONG><a name="[e8]"></a>i2c_transmit_dat</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, software_i2c.o(i.i2c_transmit_dat))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = i2c_transmit_dat &rArr; i2c_send_data &rArr; i2c_sda_mod &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_stop
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_send_data
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_sda_mod
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_write_byte
</UL>

<P><STRONG><a name="[dc]"></a>i2c_write_byte</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, software_i2c.o(i.i2c_write_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = i2c_write_byte &rArr; i2c_transmit_dat &rArr; i2c_send_data &rArr; i2c_sda_mod &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_transmit_dat
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDat
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCmd
</UL>

<P><STRONG><a name="[47]"></a>main</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = main &rArr; SystemClock_Config &rArr; HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8g2Init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeHMIEngineObj
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DemoMainProcess
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[eb]"></a>u8g2Init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, oled.o(i.u8g2Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = u8g2Init &rArr; u8g2_Setup_ssd1306_i2c_128x64_noname_f &rArr; u8x8_Setup &rArr; u8x8_SetupMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_SetPowerSave
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_InitDisplay
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8g2_Setup_ssd1306_i2c_128x64_noname_f
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8g2_SetFont
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8g2_ClearBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bc]"></a>u8g2_ClearBuffer</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, u8g2_buffer.o(i.u8g2_ClearBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = u8g2_ClearBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8g2Init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCREEN_ClearDisplay
</UL>

<P><STRONG><a name="[f0]"></a>u8g2_IsIntersection</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, u8g2_intersection.o(i.u8g2_IsIntersection))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = u8g2_IsIntersection
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8g2_is_intersection_decision_tree
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8g2_apply_clip_window
</UL>

<P><STRONG><a name="[ef]"></a>u8g2_SetFont</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, u8g2_font.o(i.u8g2_SetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = u8g2_SetFont &rArr; u8g2_read_font_info
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8g2_read_font_info
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8g2_UpdateRefHeight
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8g2Init
</UL>

<P><STRONG><a name="[f6]"></a>u8g2_SetFontPosBaseline</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, u8g2_font.o(i.u8g2_SetFontPosBaseline))
<BR><BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8g2_SetupBuffer
</UL>

<P><STRONG><a name="[f5]"></a>u8g2_SetMaxClipWindow</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, u8g2_setup.o(i.u8g2_SetMaxClipWindow))
<BR><BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8g2_SetupBuffer
</UL>

<P><STRONG><a name="[f4]"></a>u8g2_SetupBuffer</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, u8g2_setup.o(i.u8g2_SetupBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = u8g2_SetupBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8g2_SetFontPosBaseline
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8g2_SetMaxClipWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8g2_Setup_ssd1306_i2c_128x64_noname_f
</UL>

<P><STRONG><a name="[ec]"></a>u8g2_Setup_ssd1306_i2c_128x64_noname_f</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, u8g2_d_setup.o(i.u8g2_Setup_ssd1306_i2c_128x64_noname_f))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = u8g2_Setup_ssd1306_i2c_128x64_noname_f &rArr; u8x8_Setup &rArr; u8x8_SetupMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_Setup
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8g2_SetupBuffer
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8g2_m_16_8_f
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8g2Init
</UL>

<P><STRONG><a name="[f3]"></a>u8g2_UpdateRefHeight</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, u8g2_font.o(i.u8g2_UpdateRefHeight))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = u8g2_UpdateRefHeight
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8g2_SetFont
</UL>

<P><STRONG><a name="[fa]"></a>u8g2_draw_hv_line_2dir</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, u8g2_hvline.o(i.u8g2_draw_hv_line_2dir))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = u8g2_draw_hv_line_2dir
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8g2_draw_l90_r0
</UL>

<P><STRONG><a name="[57]"></a>u8g2_draw_l90_r0</STRONG> (Thumb, 12 bytes, Stack size 16 bytes, u8g2_setup.o(i.u8g2_draw_l90_r0))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = u8g2_draw_l90_r0 &rArr; u8g2_draw_hv_line_2dir
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8g2_draw_hv_line_2dir
</UL>
<BR>[Address Reference Count : 1]<UL><LI> u8g2_setup.o(.constdata)
</UL>
<P><STRONG><a name="[50]"></a>u8g2_font_calc_vref_font</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, u8g2_font.o(i.u8g2_font_calc_vref_font))
<BR>[Address Reference Count : 1]<UL><LI> u8g2_font.o(i.u8g2_SetFontPosBaseline)
</UL>
<P><STRONG><a name="[f1]"></a>u8g2_is_intersection_decision_tree</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, u8g2_intersection.o(i.u8g2_is_intersection_decision_tree))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8g2_IsIntersection
</UL>

<P><STRONG><a name="[53]"></a>u8g2_ll_hvline_vertical_top_lsb</STRONG> (Thumb, 138 bytes, Stack size 20 bytes, u8g2_ll_hvline.o(i.u8g2_ll_hvline_vertical_top_lsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = u8g2_ll_hvline_vertical_top_lsb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> u8g2_d_setup.o(i.u8g2_Setup_ssd1306_i2c_128x64_noname_f)
</UL>
<P><STRONG><a name="[f8]"></a>u8g2_m_16_8_f</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, u8g2_d_memory.o(i.u8g2_m_16_8_f))
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8g2_Setup_ssd1306_i2c_128x64_noname_f
</UL>

<P><STRONG><a name="[f2]"></a>u8g2_read_font_info</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, u8g2_font.o(i.u8g2_read_font_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = u8g2_read_font_info
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8g2_font_get_word
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8g2_SetFont
</UL>

<P><STRONG><a name="[55]"></a>u8g2_update_dimension_r0</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, u8g2_setup.o(i.u8g2_update_dimension_r0))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = u8g2_update_dimension_r0 &rArr; u8g2_update_dimension_common
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8g2_update_dimension_common
</UL>
<BR>[Address Reference Count : 1]<UL><LI> u8g2_setup.o(.constdata)
</UL>
<P><STRONG><a name="[56]"></a>u8g2_update_page_win_r0</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, u8g2_setup.o(i.u8g2_update_page_win_r0))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = u8g2_update_page_win_r0 &rArr; u8g2_apply_clip_window &rArr; u8g2_IsIntersection
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8g2_apply_clip_window
</UL>
<BR>[Address Reference Count : 1]<UL><LI> u8g2_setup.o(.constdata)
</UL>
<P><STRONG><a name="[ed]"></a>u8x8_InitDisplay</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, u8x8_display.o(i.u8x8_InitDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = u8x8_InitDisplay
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8g2Init
</UL>

<P><STRONG><a name="[ee]"></a>u8x8_SetPowerSave</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, u8x8_display.o(i.u8x8_SetPowerSave))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = u8x8_SetPowerSave
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8g2Init
</UL>

<P><STRONG><a name="[f7]"></a>u8x8_Setup</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, u8x8_setup.o(i.u8x8_Setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = u8x8_Setup &rArr; u8x8_SetupMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_SetupDefaults
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_SetupMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8g2_Setup_ssd1306_i2c_128x64_noname_f
</UL>

<P><STRONG><a name="[fd]"></a>u8x8_SetupDefaults</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, u8x8_setup.o(i.u8x8_SetupDefaults))
<BR><BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_Setup
</UL>

<P><STRONG><a name="[fe]"></a>u8x8_SetupMemory</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, u8x8_display.o(i.u8x8_SetupMemory))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = u8x8_SetupMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_Setup
</UL>

<P><STRONG><a name="[101]"></a>u8x8_byte_EndTransfer</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, u8x8_byte.o(i.u8x8_byte_EndTransfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = u8x8_byte_EndTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_cad_ssd13xx_fast_i2c
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_i2c_data_transfer
</UL>

<P><STRONG><a name="[103]"></a>u8x8_byte_SendByte</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, u8x8_byte.o(i.u8x8_byte_SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = u8x8_byte_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_cad_ssd13xx_fast_i2c
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_i2c_data_transfer
</UL>

<P><STRONG><a name="[102]"></a>u8x8_byte_StartTransfer</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, u8x8_byte.o(i.u8x8_byte_StartTransfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = u8x8_byte_StartTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_cad_ssd13xx_fast_i2c
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_i2c_data_transfer
</UL>

<P><STRONG><a name="[4f]"></a>u8x8_byte_sw_i2c</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, u8x8_byte.o(i.u8x8_byte_sw_i2c))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = u8x8_byte_sw_i2c &rArr; i2c_write_byte &rArr; i2c_write_bit &rArr; i2c_read_scl_and_delay &rArr; i2c_delay &rArr; u8x8_gpio_call
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_gpio_call
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_write_byte
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_read_sda
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_read_scl_and_delay
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_delay
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_clear_sda
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_clear_scl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oled.o(i.u8g2Init)
</UL>
<P><STRONG><a name="[10b]"></a>u8x8_cad_EndTransfer</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, u8x8_cad.o(i.u8x8_cad_EndTransfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = u8x8_cad_EndTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_d_ssd1306_sh1106_generic
</UL>

<P><STRONG><a name="[10a]"></a>u8x8_cad_SendArg</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, u8x8_cad.o(i.u8x8_cad_SendArg))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = u8x8_cad_SendArg
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_d_ssd1306_sh1106_generic
</UL>

<P><STRONG><a name="[109]"></a>u8x8_cad_SendCmd</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, u8x8_cad.o(i.u8x8_cad_SendCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = u8x8_cad_SendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_d_ssd1306_sh1106_generic
</UL>

<P><STRONG><a name="[100]"></a>u8x8_cad_SendData</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, u8x8_cad.o(i.u8x8_cad_SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = u8x8_cad_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_d_ssd1306_sh1106_generic
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_cad_SendSequence
</UL>

<P><STRONG><a name="[ff]"></a>u8x8_cad_SendSequence</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, u8x8_cad.o(i.u8x8_cad_SendSequence))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = u8x8_cad_SendSequence &rArr; u8x8_cad_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_cad_SendData
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_gpio_call
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_d_ssd1306_128x64_noname
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_d_ssd1306_sh1106_generic
</UL>

<P><STRONG><a name="[108]"></a>u8x8_cad_StartTransfer</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, u8x8_cad.o(i.u8x8_cad_StartTransfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = u8x8_cad_StartTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_d_ssd1306_sh1106_generic
</UL>

<P><STRONG><a name="[51]"></a>u8x8_cad_ssd13xx_fast_i2c</STRONG> (Thumb, 178 bytes, Stack size 40 bytes, u8x8_cad.o(i.u8x8_cad_ssd13xx_fast_i2c))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = u8x8_cad_ssd13xx_fast_i2c &rArr; u8x8_i2c_data_transfer &rArr; u8x8_byte_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_i2c_data_transfer
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_byte_StartTransfer
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_byte_SendByte
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_byte_EndTransfer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> u8g2_d_setup.o(i.u8g2_Setup_ssd1306_i2c_128x64_noname_f)
</UL>
<P><STRONG><a name="[105]"></a>u8x8_d_helper_display_init</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, u8x8_display.o(i.u8x8_d_helper_display_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = u8x8_d_helper_display_init &rArr; u8x8_gpio_call
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_gpio_call
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_d_ssd1306_128x64_noname
</UL>

<P><STRONG><a name="[107]"></a>u8x8_d_helper_display_setup_memory</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, u8x8_display.o(i.u8x8_d_helper_display_setup_memory))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_d_ssd1306_128x64_noname
</UL>

<P><STRONG><a name="[52]"></a>u8x8_d_ssd1306_128x64_noname</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, u8x8_d_ssd1306_128x64_noname.o(i.u8x8_d_ssd1306_128x64_noname))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = u8x8_d_ssd1306_128x64_noname &rArr; u8x8_d_ssd1306_sh1106_generic &rArr; u8x8_cad_SendSequence &rArr; u8x8_cad_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_d_ssd1306_sh1106_generic
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_d_helper_display_setup_memory
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_d_helper_display_init
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_cad_SendSequence
</UL>
<BR>[Address Reference Count : 1]<UL><LI> u8g2_d_setup.o(i.u8g2_Setup_ssd1306_i2c_128x64_noname_f)
</UL>
<P><STRONG><a name="[54]"></a>u8x8_dummy_cb</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, u8x8_setup.o(i.u8x8_dummy_cb))
<BR>[Address Reference Count : 1]<UL><LI> u8x8_setup.o(i.u8x8_SetupDefaults)
</UL>
<P><STRONG><a name="[4e]"></a>u8x8_gpio_and_delay</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, oled.o(i.u8x8_gpio_and_delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = u8x8_gpio_and_delay &rArr; OLED_Init &rArr; OLED_Fill &rArr; WriteDat &rArr; i2c_write_byte &rArr; i2c_transmit_dat &rArr; i2c_send_data &rArr; i2c_sda_mod &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oled.o(i.u8g2Init)
</UL>
<P><STRONG><a name="[de]"></a>u8x8_gpio_call</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, u8x8_gpio.o(i.u8x8_gpio_call))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = u8x8_gpio_call
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_byte_sw_i2c
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_d_helper_display_init
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_cad_SendSequence
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_read_sda
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_read_scl_and_delay
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_delay
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_clear_sda
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_clear_scl
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[e6]"></a>i2c_delay</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, software_i2c.o(i.i2c_delay))
<BR><BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_transmit_dat
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_stop
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_send_data
</UL>

<P><STRONG><a name="[e3]"></a>i2c_sda_mod</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, software_i2c.o(i.i2c_sda_mod))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = i2c_sda_mod &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_transmit_dat
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_send_data
</UL>

<P><STRONG><a name="[e4]"></a>i2c_send_data</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, software_i2c.o(i.i2c_send_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = i2c_send_data &rArr; i2c_sda_mod &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_sda_mod
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_transmit_dat
</UL>

<P><STRONG><a name="[e7]"></a>i2c_stop</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, software_i2c.o(i.i2c_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_transmit_dat
</UL>

<P><STRONG><a name="[78]"></a>__NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, stm32g0xx_hal_cortex.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[fb]"></a>u8g2_font_get_word</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, u8g2_font.o(i.u8g2_font_get_word))
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8g2_read_font_info
</UL>

<P><STRONG><a name="[f9]"></a>u8g2_apply_clip_window</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, u8g2_setup.o(i.u8g2_apply_clip_window))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = u8g2_apply_clip_window &rArr; u8g2_IsIntersection
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8g2_IsIntersection
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8g2_update_page_win_r0
</UL>

<P><STRONG><a name="[fc]"></a>u8g2_update_dimension_common</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, u8g2_setup.o(i.u8g2_update_dimension_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = u8g2_update_dimension_common
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8g2_update_dimension_r0
</UL>

<P><STRONG><a name="[dd]"></a>i2c_clear_scl</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, u8x8_byte.o(i.i2c_clear_scl))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = i2c_clear_scl &rArr; u8x8_gpio_call
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_gpio_call
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_byte_sw_i2c
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_write_byte
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_write_bit
</UL>

<P><STRONG><a name="[df]"></a>i2c_clear_sda</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, u8x8_byte.o(i.i2c_clear_sda))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = i2c_clear_sda &rArr; u8x8_gpio_call
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_gpio_call
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_byte_sw_i2c
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_write_bit
</UL>

<P><STRONG><a name="[e0]"></a>i2c_delay</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, u8x8_byte.o(i.i2c_delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = i2c_delay &rArr; u8x8_gpio_call
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_gpio_call
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_byte_sw_i2c
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_write_byte
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_write_bit
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_read_scl_and_delay
</UL>

<P><STRONG><a name="[e1]"></a>i2c_read_scl_and_delay</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, u8x8_byte.o(i.i2c_read_scl_and_delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = i2c_read_scl_and_delay &rArr; i2c_delay &rArr; u8x8_gpio_call
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_gpio_call
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_byte_sw_i2c
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_write_byte
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_write_bit
</UL>

<P><STRONG><a name="[e2]"></a>i2c_read_sda</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, u8x8_byte.o(i.i2c_read_sda))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = i2c_read_sda &rArr; u8x8_gpio_call
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_gpio_call
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_byte_sw_i2c
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_write_byte
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_write_bit
</UL>

<P><STRONG><a name="[e9]"></a>i2c_write_bit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, u8x8_byte.o(i.i2c_write_bit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = i2c_write_bit &rArr; i2c_read_scl_and_delay &rArr; i2c_delay &rArr; u8x8_gpio_call
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_read_sda
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_read_scl_and_delay
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_delay
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_clear_sda
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_clear_scl
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_write_byte
</UL>

<P><STRONG><a name="[ea]"></a>i2c_write_byte</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, u8x8_byte.o(i.i2c_write_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = i2c_write_byte &rArr; i2c_write_bit &rArr; i2c_read_scl_and_delay &rArr; i2c_delay &rArr; u8x8_gpio_call
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_write_bit
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_read_sda
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_read_scl_and_delay
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_delay
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_clear_scl
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_byte_sw_i2c
</UL>

<P><STRONG><a name="[104]"></a>u8x8_i2c_data_transfer</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, u8x8_cad.o(i.u8x8_i2c_data_transfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = u8x8_i2c_data_transfer &rArr; u8x8_byte_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_byte_StartTransfer
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_byte_SendByte
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_byte_EndTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_cad_ssd13xx_fast_i2c
</UL>

<P><STRONG><a name="[106]"></a>u8x8_d_ssd1306_sh1106_generic</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, u8x8_d_ssd1306_128x64_noname.o(i.u8x8_d_ssd1306_sh1106_generic))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = u8x8_d_ssd1306_sh1106_generic &rArr; u8x8_cad_SendSequence &rArr; u8x8_cad_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_cad_StartTransfer
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_cad_SendSequence
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_cad_SendData
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_cad_SendCmd
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_cad_SendArg
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_cad_EndTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8x8_d_ssd1306_128x64_noname
</UL>

<P><STRONG><a name="[5c]"></a>SGUI_Resource_GetCharIndex_Default</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, sgui_fontresource.o(i.SGUI_Resource_GetCharIndex_Default))
<BR>[Address Reference Count : 2]<UL><LI> sgui_fontresource.o(.constdata)
<LI> sgui_fontresource.o(.constdata)
</UL>
<P><STRONG><a name="[58]"></a>SGUI_Resource_GetCharIndex_MiniNum</STRONG> (Thumb, 94 bytes, Stack size 4 bytes, sgui_fontresource.o(i.SGUI_Resource_GetCharIndex_MiniNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SGUI_Resource_GetCharIndex_MiniNum &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sgui_fontresource.o(.constdata)
</UL>
<P><STRONG><a name="[5e]"></a>SGUI_Resource_GetFontData_12</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, sgui_fontresource.o(i.SGUI_Resource_GetFontData_12))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SGUI_Resource_GetFontData_12
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sgui_fontresource.o(.constdata)
</UL>
<P><STRONG><a name="[5d]"></a>SGUI_Resource_GetFontData_8</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, sgui_fontresource.o(i.SGUI_Resource_GetFontData_8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SGUI_Resource_GetFontData_8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sgui_fontresource.o(.constdata)
</UL>
<P><STRONG><a name="[59]"></a>SGUI_Resource_GetFontData_MiniNum</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, sgui_fontresource.o(i.SGUI_Resource_GetFontData_MiniNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SGUI_Resource_GetFontData_MiniNum
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sgui_fontresource.o(.constdata)
</UL>
<P><STRONG><a name="[5b]"></a>SGUI_Resource_IsFullWidth_Default</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sgui_fontresource.o(i.SGUI_Resource_IsFullWidth_Default))
<BR>[Address Reference Count : 3]<UL><LI> sgui_fontresource.o(.constdata)
<LI> sgui_fontresource.o(.constdata)
<LI> sgui_fontresource.o(.constdata)
</UL>
<P><STRONG><a name="[5a]"></a>SGUI_Resource_StepNext_Default</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sgui_fontresource.o(i.SGUI_Resource_StepNext_Default))
<BR>[Address Reference Count : 3]<UL><LI> sgui_fontresource.o(.constdata)
<LI> sgui_fontresource.o(.constdata)
<LI> sgui_fontresource.o(.constdata)
</UL>
<P><STRONG><a name="[d4]"></a>SGUI_RealtimeGraph_GetValuePointYCoordinate</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, sgui_realtimegraph.o(i.SGUI_RealtimeGraph_GetValuePointYCoordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SGUI_RealtimeGraph_GetValuePointYCoordinate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_RealtimeGraph_Repaint
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_RealtimeGraph_Initialize
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_RealtimeGraph_AppendValue
</UL>

<P><STRONG><a name="[7e]"></a>HMI_GetScreenObjectInEngine</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, hmi_engine.o(i.HMI_GetScreenObjectInEngine))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HMI_GetScreenObjectInEngine
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_SwitchScreen
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_ActiveEngine
</UL>

<P><STRONG><a name="[3]"></a>HMI_DemoBasic_PostProcess</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, basic.o(i.HMI_DemoBasic_PostProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HMI_DemoBasic_PostProcess &rArr; HMI_GoBack
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_GoBack
</UL>
<BR>[Address Reference Count : 1]<UL><LI> basic.o(.data)
</UL>
<P><STRONG><a name="[0]"></a>HMI_DemoBasic_Prepare</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, basic.o(i.HMI_DemoBasic_Prepare))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = HMI_DemoBasic_Prepare &rArr; HMI_DemoBasic_RefreshScreen &rArr; SGUI_Basic_DrawRoundedRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoBasic_RefreshScreen
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawRectangle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> basic.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>HMI_DemoBasic_ProcessEvent</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, basic.o(i.HMI_DemoBasic_ProcessEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HMI_DemoBasic_ProcessEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> basic.o(.data)
</UL>
<P><STRONG><a name="[1]"></a>HMI_DemoBasic_RefreshScreen</STRONG> (Thumb, 334 bytes, Stack size 48 bytes, basic.o(i.HMI_DemoBasic_RefreshScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = HMI_DemoBasic_RefreshScreen &rArr; SGUI_Basic_DrawRoundedRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawRoundedRectangle
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawRectangle
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawHorizontalLine
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoBasic_Prepare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> basic.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>HMI_DemoCurve_Initialize</STRONG> (Thumb, 180 bytes, Stack size 48 bytes, curve.o(i.HMI_DemoCurve_Initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = HMI_DemoCurve_Initialize &rArr; SGUI_Curve_InsertBeforePoint &rArr; SGUI_Curve_CalculatePointPosition &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoCurve_NewPoint
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Curve_InsertBeforePoint
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Curve_InsertAfterPoint
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Curve_InitializePoint
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Curve_Initialize
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Curve_FocusPoint
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Curve_AddPoint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> curve.o(.data)
</UL>
<P><STRONG><a name="[85]"></a>HMI_DemoCurve_NewPoint</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, curve.o(i.HMI_DemoCurve_NewPoint))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoCurve_ProcessEvent
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoCurve_Initialize
</UL>

<P><STRONG><a name="[8]"></a>HMI_DemoCurve_PostProcess</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, curve.o(i.HMI_DemoCurve_PostProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HMI_DemoCurve_PostProcess &rArr; HMI_GoBack
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_GoBack
</UL>
<BR>[Address Reference Count : 1]<UL><LI> curve.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>HMI_DemoCurve_Prepare</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, curve.o(i.HMI_DemoCurve_Prepare))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = HMI_DemoCurve_Prepare &rArr; HMI_DemoCurve_RefreshScreen &rArr; HMI_DemoCurve_RepaintText &rArr; SGUI_Text_DrawText &rArr; SGUI_Basic_DrawRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoCurve_RefreshScreen
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Curve_FocusPoint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> curve.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>HMI_DemoCurve_ProcessEvent</STRONG> (Thumb, 296 bytes, Stack size 40 bytes, curve.o(i.HMI_DemoCurve_ProcessEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = HMI_DemoCurve_ProcessEvent &rArr; HMI_DemoCurve_RefreshScreen &rArr; HMI_DemoCurve_RepaintText &rArr; SGUI_Text_DrawText &rArr; SGUI_Basic_DrawRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoCurve_RefreshScreen
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoCurve_NewPoint
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Curve_UpdateFocusPoint
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Curve_RemovePoint
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Curve_PointIsHighlight
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Curve_InsertBeforePoint
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Curve_InsertAfterPoint
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Curve_InitializePoint
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Curve_HighlightFocus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> curve.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>HMI_DemoCurve_RefreshScreen</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, curve.o(i.HMI_DemoCurve_RefreshScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = HMI_DemoCurve_RefreshScreen &rArr; HMI_DemoCurve_RepaintText &rArr; SGUI_Text_DrawText &rArr; SGUI_Basic_DrawRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoCurve_RepaintText
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Curve_Repaint
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Curve_HighlightFocus
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawRectangle
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoCurve_ProcessEvent
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoCurve_Prepare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> curve.o(.data)
</UL>
<P><STRONG><a name="[91]"></a>HMI_DemoCurve_RepaintText</STRONG> (Thumb, 170 bytes, Stack size 72 bytes, curve.o(i.HMI_DemoCurve_RepaintText))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = HMI_DemoCurve_RepaintText &rArr; SGUI_Text_DrawText &rArr; SGUI_Basic_DrawRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Text_DrawText
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Common_IntegerToString
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoCurve_RefreshScreen
</UL>

<P><STRONG><a name="[9]"></a>HMI_DemoList_Initialize</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, list.o(i.HMI_DemoList_Initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = HMI_DemoList_Initialize &rArr; SGUI_List_Initialize &rArr; SGUI_ItemsBase_Initialize &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_List_Initialize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> list.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>HMI_DemoList_PostProcess</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, list.o(i.HMI_DemoList_PostProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HMI_DemoList_PostProcess &rArr; HMI_SwitchScreen &rArr; HMI_GetScreenObjectInEngine
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_SwitchScreen
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_GoBack
</UL>
<BR>[Address Reference Count : 1]<UL><LI> list.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>HMI_DemoList_Prepare</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, list.o(i.HMI_DemoList_Prepare))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = HMI_DemoList_Prepare &rArr; SGUI_List_Repaint &rArr; SGUI_ItemsBase_Repaint &rArr; SGUI_Text_DrawText &rArr; SGUI_Basic_DrawRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_List_Repaint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> list.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>HMI_DemoList_ProcessEvent</STRONG> (Thumb, 400 bytes, Stack size 48 bytes, list.o(i.HMI_DemoList_ProcessEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = HMI_DemoList_ProcessEvent &rArr; SGUI_List_Repaint &rArr; SGUI_ItemsBase_Repaint &rArr; SGUI_Text_DrawText &rArr; SGUI_Basic_DrawRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_List_Resize
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_List_Repaint
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_List_RemoveItem
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_List_InsertItem
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ItemsBase_Selecte
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawRectangle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> list.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>HMI_DemoList_RefreshScreen</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, list.o(i.HMI_DemoList_RefreshScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = HMI_DemoList_RefreshScreen &rArr; SGUI_List_Repaint &rArr; SGUI_ItemsBase_Repaint &rArr; SGUI_Text_DrawText &rArr; SGUI_Basic_DrawRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_List_Repaint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> list.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>HMI_DemoMenu_Initialize</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, menu.o(i.HMI_DemoMenu_Initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = HMI_DemoMenu_Initialize &rArr; SGUI_Menu_Initialize &rArr; SGUI_ItemsBase_Initialize &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Menu_Initialize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[12]"></a>HMI_DemoMenu_PostProcess</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, menu.o(i.HMI_DemoMenu_PostProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HMI_DemoMenu_PostProcess &rArr; HMI_GoBack
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_GoBack
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>HMI_DemoMenu_Prepare</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, menu.o(i.HMI_DemoMenu_Prepare))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = HMI_DemoMenu_Prepare &rArr; SGUI_Menu_Repaint &rArr; SGUI_ItemsBase_Repaint &rArr; SGUI_Text_DrawText &rArr; SGUI_Basic_DrawRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Menu_Repaint
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawRectangle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>HMI_DemoMenu_ProcessEvent</STRONG> (Thumb, 236 bytes, Stack size 64 bytes, menu.o(i.HMI_DemoMenu_ProcessEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = HMI_DemoMenu_ProcessEvent &rArr; SGUI_Menu_Repaint &rArr; SGUI_ItemsBase_Repaint &rArr; SGUI_Text_DrawText &rArr; SGUI_Basic_DrawRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Menu_Repaint
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Menu_PopupSubMenu
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Menu_Initialize
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ItemsBase_Selecte
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_ItemsBase_GetItemExtent
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawRectangle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>HMI_DemoMenu_RefreshScreen</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, menu.o(i.HMI_DemoMenu_RefreshScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = HMI_DemoMenu_RefreshScreen &rArr; SGUI_Menu_Repaint &rArr; SGUI_ItemsBase_Repaint &rArr; SGUI_Text_DrawText &rArr; SGUI_Basic_DrawRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Menu_Repaint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[13]"></a>HMI_DemoNotice_Initialize</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, notice.o(i.HMI_DemoNotice_Initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HMI_DemoNotice_Initialize
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Notice_FitArea
</UL>
<BR>[Address Reference Count : 1]<UL><LI> notice.o(.data)
</UL>
<P><STRONG><a name="[17]"></a>HMI_DemoNotice_PostProcess</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, notice.o(i.HMI_DemoNotice_PostProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HMI_DemoNotice_PostProcess &rArr; HMI_GoBack
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_GoBack
</UL>
<BR>[Address Reference Count : 1]<UL><LI> notice.o(.data)
</UL>
<P><STRONG><a name="[14]"></a>HMI_DemoNotice_Prepare</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, notice.o(i.HMI_DemoNotice_Prepare))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = HMI_DemoNotice_Prepare &rArr; SGUI_Notice_Repaint &rArr; SGUI_Text_DrawMultipleLinesText &rArr; SGUI_Basic_DrawRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Notice_Repaint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> notice.o(.data)
</UL>
<P><STRONG><a name="[16]"></a>HMI_DemoNotice_ProcessEvent</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, notice.o(i.HMI_DemoNotice_ProcessEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HMI_DemoNotice_ProcessEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> notice.o(.data)
</UL>
<P><STRONG><a name="[15]"></a>HMI_DemoNotice_RefreshScreen</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, notice.o(i.HMI_DemoNotice_RefreshScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = HMI_DemoNotice_RefreshScreen &rArr; SGUI_Notice_Repaint &rArr; SGUI_Text_DrawMultipleLinesText &rArr; SGUI_Basic_DrawRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Notice_Repaint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> notice.o(.data)
</UL>
<P><STRONG><a name="[18]"></a>HMI_DemoRealGraph_Initialize</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, realtimegraph.o(i.HMI_DemoRealGraph_Initialize))
<BR>[Address Reference Count : 1]<UL><LI> realtimegraph.o(.data)
</UL>
<P><STRONG><a name="[1c]"></a>HMI_DemoRealGraph_PostProcess</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, realtimegraph.o(i.HMI_DemoRealGraph_PostProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HMI_DemoRealGraph_PostProcess &rArr; HMI_GoBack
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickTimerEnable
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_GoBack
</UL>
<BR>[Address Reference Count : 1]<UL><LI> realtimegraph.o(.data)
</UL>
<P><STRONG><a name="[19]"></a>HMI_DemoRealGraph_Prepare</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, realtimegraph.o(i.HMI_DemoRealGraph_Prepare))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = HMI_DemoRealGraph_Prepare &rArr; SGUI_RealtimeGraph_Repaint &rArr; SGUI_Basic_DrawRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickTimerEnable
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_RealtimeGraph_Repaint
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_RealtimeGraph_Initialize
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawRectangle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> realtimegraph.o(.data)
</UL>
<P><STRONG><a name="[1b]"></a>HMI_DemoRealGraph_ProcessEvent</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, realtimegraph.o(i.HMI_DemoRealGraph_ProcessEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = HMI_DemoRealGraph_ProcessEvent &rArr; HMI_DemoRealGraph_RefreshScreen &rArr; SGUI_Text_DrawText &rArr; SGUI_Basic_DrawRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoRealGraph_RefreshScreen
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_RealtimeGraph_AppendValue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> realtimegraph.o(.data)
</UL>
<P><STRONG><a name="[1a]"></a>HMI_DemoRealGraph_RefreshScreen</STRONG> (Thumb, 148 bytes, Stack size 72 bytes, realtimegraph.o(i.HMI_DemoRealGraph_RefreshScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = HMI_DemoRealGraph_RefreshScreen &rArr; SGUI_Text_DrawText &rArr; SGUI_Basic_DrawRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_RealtimeGraph_Repaint
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Text_DrawText
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Common_IntegerToString
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawRectangle
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoRealGraph_ProcessEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> realtimegraph.o(.data)
</UL>
<P><STRONG><a name="[60]"></a>GB2312_GetFontData</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, resource.o(i.GB2312_GetFontData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GB2312_GetFontData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> resource.o(.constdata)
</UL>
<P><STRONG><a name="[62]"></a>GB2312_IsFullWidth</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, resource.o(i.GB2312_IsFullWidth))
<BR>[Address Reference Count : 1]<UL><LI> resource.o(.constdata)
</UL>
<P><STRONG><a name="[5f]"></a>GetCharIndex_GB2312</STRONG> (Thumb, 76 bytes, Stack size 12 bytes, resource.o(i.GetCharIndex_GB2312))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GetCharIndex_GB2312
</UL>
<BR>[Address Reference Count : 1]<UL><LI> resource.o(.constdata)
</UL>
<P><STRONG><a name="[61]"></a>StepNext_GB2312</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, resource.o(i.StepNext_GB2312))
<BR>[Address Reference Count : 1]<UL><LI> resource.o(.constdata)
</UL>
<P><STRONG><a name="[20]"></a>HMI_DemoText_PostProcess</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, text.o(i.HMI_DemoText_PostProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HMI_DemoText_PostProcess &rArr; HMI_GoBack
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_GoBack
</UL>
<BR>[Address Reference Count : 1]<UL><LI> text.o(.data)
</UL>
<P><STRONG><a name="[1d]"></a>HMI_DemoText_Prepare</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, text.o(i.HMI_DemoText_Prepare))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = HMI_DemoText_Prepare &rArr; HMI_DemoText_RefreshScreen &rArr; SGUI_Text_DrawMultipleLinesText &rArr; SGUI_Basic_DrawRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoText_RefreshScreen
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawRectangle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> text.o(.data)
</UL>
<P><STRONG><a name="[1f]"></a>HMI_DemoText_ProcessEvent</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, text.o(i.HMI_DemoText_ProcessEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HMI_DemoText_ProcessEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> text.o(.data)
</UL>
<P><STRONG><a name="[1e]"></a>HMI_DemoText_RefreshScreen</STRONG> (Thumb, 178 bytes, Stack size 64 bytes, text.o(i.HMI_DemoText_RefreshScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = HMI_DemoText_RefreshScreen &rArr; SGUI_Text_DrawMultipleLinesText &rArr; SGUI_Basic_DrawRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Text_DrawMultipleLinesText
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Text_DrawText
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoText_Prepare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> text.o(.data)
</UL>
<P><STRONG><a name="[a9]"></a>HMI_DemoVariableBox_DrawFrame</STRONG> (Thumb, 120 bytes, Stack size 56 bytes, variablebox.o(i.HMI_DemoVariableBox_DrawFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = HMI_DemoVariableBox_DrawFrame &rArr; SGUI_Text_DrawText &rArr; SGUI_Basic_DrawRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Text_DrawText
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawRectangle
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoVariableBox_RefreshScreen
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoVariableBox_ProcessEvent
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoVariableBox_Prepare
</UL>

<P><STRONG><a name="[21]"></a>HMI_DemoVariableBox_Initialize</STRONG> (Thumb, 102 bytes, Stack size 72 bytes, variablebox.o(i.HMI_DemoVariableBox_Initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HMI_DemoVariableBox_Initialize &rArr; SGUI_TextVariableBox_Initialize
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_TextVariableBox_Initialize
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_NumberVariableBox_Initialize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> variablebox.o(.data)
</UL>
<P><STRONG><a name="[25]"></a>HMI_DemoVariableBox_PostProcess</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, variablebox.o(i.HMI_DemoVariableBox_PostProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HMI_DemoVariableBox_PostProcess &rArr; HMI_GoBack
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_GoBack
</UL>
<BR>[Address Reference Count : 1]<UL><LI> variablebox.o(.data)
</UL>
<P><STRONG><a name="[22]"></a>HMI_DemoVariableBox_Prepare</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, variablebox.o(i.HMI_DemoVariableBox_Prepare))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = HMI_DemoVariableBox_Prepare &rArr; SGUI_Notice_Repaint &rArr; SGUI_Text_DrawMultipleLinesText &rArr; SGUI_Basic_DrawRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCTimerEnable
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoVariableBox_DrawFrame
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Notice_Repaint
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Notice_FitArea
</UL>
<BR>[Address Reference Count : 1]<UL><LI> variablebox.o(.data)
</UL>
<P><STRONG><a name="[24]"></a>HMI_DemoVariableBox_ProcessEvent</STRONG> (Thumb, 412 bytes, Stack size 56 bytes, variablebox.o(i.HMI_DemoVariableBox_ProcessEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = HMI_DemoVariableBox_ProcessEvent &rArr; HMI_DemoVariableBox_RefreshScreen &rArr; SGUI_NumberVariableBox_Repaint &rArr; SGUI_Text_DrawText &rArr; SGUI_Basic_DrawRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCTimerEnable
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoVariableBox_RefreshScreen
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoVariableBox_DrawFrame
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_TextVariableBox_Repaint
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_NumberVariableBox_Repaint
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawRectangle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> variablebox.o(.data)
</UL>
<P><STRONG><a name="[23]"></a>HMI_DemoVariableBox_RefreshScreen</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, variablebox.o(i.HMI_DemoVariableBox_RefreshScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = HMI_DemoVariableBox_RefreshScreen &rArr; SGUI_NumberVariableBox_Repaint &rArr; SGUI_Text_DrawText &rArr; SGUI_Basic_DrawRectangle &rArr; SGUI_Basic_FillRectangleArea &rArr; SGUI_Basic_DrawVerticalLine &rArr; SGUI_Basic_DrawPoint &rArr; SGUI_Basic_PointIsInArea
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoVariableBox_DrawFrame
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_TextVariableBox_Repaint
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_NumberVariableBox_Repaint
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGUI_Basic_DrawRectangle
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMI_DemoVariableBox_ProcessEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> variablebox.o(.data)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
